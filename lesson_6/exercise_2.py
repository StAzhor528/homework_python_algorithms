"""Задача из курса "Алгоритмы и структуры данных на Python".
Задание 2.
Попытайтесь выполнить профилирование памяти в любом скрипте с рекурсией.
Вам нужно обнаружить проблему в процессе этого. Но проблема связана не с тем,
что рекурсия потребляет много памяти, а с самим процессом замеров.
Опишите эту проблему и найдите простой путь ее решения.
Опишите этот путь и покажите его применение

Задача: Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
"""
from memory_profiler import profile


@profile
def even_odd(num, even=0, odd=0):
    if num == 0:
        return even, odd
    if num % 2 == 0:
        even += 1
    else:
        odd += 1
    return even_odd(num // 10, even, odd)


if __name__ == '__main__':
    even_odd(1)

# Проблемма заключается в том, что при вызове функции из функции срабатывает декоратор столько раз,
# сколько будет вызываться функция. Соответственно нам необходимо задать аргумент функции такой,
# чтобы рекурсия отработала 1 шаг, а далее сработало условие на выход. В данной задаче это любое число от 1 до 9.
